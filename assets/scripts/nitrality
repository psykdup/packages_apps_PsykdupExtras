#!/system/bin/sh
#
# nitrality Script (v0.6) by nitr8
#
# This is an script used to modify settings on a Galaxy S & nitrality APP
# this shell script assumes you are running an insanity ROM
#
###################################################################
#
# By running this script you agree to the following:
# 
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
###################################################################
#
# CHANGELOG:
# v 0.9 - 18.05.2011 (nitr8)
# - update lcd to work eaven if no ro.sf.lcd_density is set in build.prop
# v 0.8 - 28.03.2011 (nitr8)
# - added update apps, witch installs applications in a zip file thats located on the sdcard
# - updated insane backup to restart zeam & set correct perms
# v 0.7 - 28.03.2011 (nitr8)
# - added insane backup / restore
# v 0.6 - 22.02.2011 (nitr8)
# - added cpu_stats
# v 0.5 - 17.02.2011
# - ensured efs() is using busybox mkdir, changed if
# v 0.4 - 22.01.2011 (xan)
# - added dpi query to get current dpi value
# v 0.3 - 20.01.2011
# - added help section
# - added multi-dpi switching
# - added remount
# - added kernel backp
# - fixed efs
# - added Kernel Tweaks
# - added Thumbnail Cleanup
# - added GPS Fix
# - added ext4 journal
# - added ramzswap
# - added Stock Memory Timings
# v 0.2 - 19.01.2011
# - added efs_imei backup / restore
# v 0.1 - 18.01.2011
# - initial release

DIRECTORY=/mnt/sdcard/insanity

if [ ! -d "$DIRECTORY/config" ]; then
    mkdir -p $DIRECTORY/config
fi

if [ $# -eq 0 ]; then
	echo ""
	echo "Usage: `basename $0` <COMMAND> <OPTION>"
	echo "Try `basename $0` -h for more information."
	echo ""
	exit
fi

remount()
{
	echo "Mounting system as rw"
	busybox mount -o remount,rw /system/
}
meda_scanner()
{
if [ $# -eq 0 ]; then
	echo "specify and option"
else
	if [ $1 = disable ]; then
		pm disable com.android.providers.media/com.android.providers.media.MediaScannerReceiver
		touch $DIRECTORY/config/meda_scanner
		echo "Meda Scanner Disabled"
	fi
	if [ $1 = enable ]; then
		pm enable com.android.providers.media/com.android.providers.media.MediaScannerReceiver
		rm -Rf $DIRECTORY/config/meda_scanner
		echo "Meda Scanner Enabled"
	fi
fi
}

efs()
{
if [ ! -d "$DIRECTORY/backup/efs" ]; then
    busybox mkdir -p $DIRECTORY/backup/efs/
fi
if [ $# -eq 0 ]; then
	echo "specify an option"
else
	if [ $1 = backup ]; then
		cp -R /efs/* $DIRECTORY/backup/efs/
		touch $DIRECTORY/config/efs
		echo "EFS & EMEI Backup"
	fi
	if [ $1 = restore ]; then
		cp -R $DIRECTORY/backup/efs/* /efs/
		echo "EFS & EMEI Restored"
	fi
fi
}

zeam()
{
if [ ! -d "$DIRECTORY/backup/zeam" ]; then
    busybox mkdir -p $DIRECTORY/backup/zeam/
fi
if [ $# -eq 0 ]; then
	echo "specify an option"
else
	if [ $1 = backup ]; then
		cp -R /data/data/org.zeam $DIRECTORY/backup/zeam/
		touch $DIRECTORY/config/zeam
		echo "insane zeam Backup"
	fi
	if [ $1 = restore ]; then
		cp -R $DIRECTORY/backup/zeam/* /data/data/
                chmod -R 777 /data/data/org.zeam/
                killall -9 org.zeam.core  
		echo "zeam Restored"
	fi
fi
}

change_dpi()
{
if [ $# -eq 0 ]; then
	if grep -q ro.sf.lcd_density /system/build.prop ; then
		cat /system/build.prop | grep lcd_de | sed 's/^..................//'
	else
		echo "0"
	fi
else
	echo "Patching Multi-DPI"
	if grep -q ro.sf.lcd_density /system/build.prop ; then
		sed -i 's/^.*ro.sf.lcd_density.*$/ro.sf.lcd_density='$1'/' /system/build.prop
	else
		echo "ro.sf.lcd_density=$1" >> /system/build.prop
	fi
fi
}

clean_thumbnails()
{
echo "Prevent gallery problems & heavy battery drain"
if [ -d "/dbdata/databases/com.android.providers.media/" ]; then
	rm -Rf /dbdata/databases/com.android.providers.media/
fi
if [ -d "/dbdata/databases/com.cooliris.media/" ]; then
	rm -Rf /dbdata/databases/com.cooliris.media/
fi
if [ -d "/sdcard/DCIM/.thumbnails" ]; then
	find /sdcard/ -type d -name ".thumbnails" -exec rm -rf {} \;
fi
}

kernel_tweaks()
{
if [ $# -eq 0 ]; then
	echo "specify and option"
else
	if [ $1 = enable ]; then
		echo "IOSCHED" > /system/etc/tweaks.conf
		echo "KERNELVM" >> /system/etc/tweaks.conf
		echo "KERNELSCHED" >> /system/etc/tweaks.conf
		echo "MISC" >> /system/etc/tweaks.conf
		touch $DIRECTORY/config/kernel_tweaks
		echo "Kernel Tweaks Enabled"
	fi
	if [ $1 = disable ]; then
		rm -Rf /system/etc/tweaks.conf
		rm -Rf $DIRECTORY/config/kernel_tweaks
		echo "Kernel Tweaks Disabled"
	fi
fi
}

ext4_journal()
{
if [ $# -eq 0 ]; then
	echo "specify and option"
else
	if [ $1 = disable ]; then
		echo "tune2fs -j /dev/block/mmcblk0p2" > /system/etc/init.d/S_disable_ext4_journal.sh
		echo "tune2fs -j /dev/block/stl10" >> /system/etc/init.d/S_disable_ext4_journal.sh
		echo "tune2fs -j /dev/block/stl11" >> /system/etc/init.d/S_disable_ext4_journal.sh
		chmod 755 /system/etc/init.d/S_disable_ext4_journal.sh
		touch $DIRECTORY/config/ext4_journal
		echo "ext4 journal Disabled"
	fi
	if [ $1 = enable ]; then
		rm -Rf /system/etc/init.d/S_disable_ext4_journal.sh
		rm -Rf $DIRECTORY/config/ext4_journal
		echo "ext4 journal Enabled"
	fi
fi
}
ramzswap()
{
if [ $# -eq 0 ]; then
	echo "specify and option"
else
	if [ $1 = disable ]; then
		echo "swapoff /dev/block/ramzswap0" > /system/etc/init.d/S_ramzswap_disable.sh
		echo "rmmod /lib/modules/ramzswap.ko" >> /system/etc/init.d/S_ramzswap_disable.sh
		chmod 755 /system/etc/init.d/S_ramzswap_disable.sh
		touch $DIRECTORY/config/ramzswap
		echo "ramzswap Disabled"
	fi
	if [ $1 = enable ]; then
		rm -Rf /system/etc/init.d/S_ramzswap_disable.sh
		rm -Rf $DIRECTORY/config/ramzswap
		echo "ramzswap Enabled"
	fi
fi
}
mem_timings()
{
if [ $# -eq 0 ]; then
	echo "specify and option"
else
	if [ $1 = disable ]; then
		echo "echo "337851015 404959878" > /sys/devices/system/cpu/cpu0/cpufreq/AC_timing_registers_row" > /system/etc/init.d/S_stock_mem_timings.sh
		echo "echo "303235076 303235076" > /sys/devices/system/cpu/cpu0/cpufreq/AC_timing_registers_data" >> /system/etc/init.d/S_stock_mem_timings.sh
		chmod 755 /system/etc/init.d/S_stock_mem_timings.sh
		touch $DIRECTORY/config/mem_timings
		echo "Stock Memory Timings Disabled"
	fi
	if [ $1 = enable ]; then
		rm -Rf /system/etc/init.d/S_stock_mem_timings.sh
		rm -Rf $DIRECTORY/config/mem_timings
		echo "Stock Memory Timings Enabled"
	fi
fi
}

kernel_mgnt()
{
if [ ! -d "$DIRECTORY/backup" ]; then
    mkdir -p $DIRECTORY/backup/efs/
fi
if [ $# -eq 0 ]; then
	echo "specify and option"
else
	if [ $1 = backup ]; then
		dd if=/dev/block/bml7 of=/tmp/bml7.img
		cp -R /tmp/bml7.img $DIRECTORY/backup/zImage
		md5sum $DIRECTORY/backup/zImage > $DIRECTORY/backup/zImage.md5
		touch $DIRECTORY/config/kernel
		echo "Kernel Backup"
	fi
	if [ $1 = restore ]; then
#		TODO
		echo "Kernel Restored"
	fi
fi
}

gps_fix()
{
if [ $# -eq 0 ]; then
	echo "specify and option"
else
	echo "Patching GPS Config"
	sed -i 's/^.*NTP_SERVER.*$/NTP_SERVER='$1'/' /system/etc/gps.conf 
fi
}

cpu_history()       
{                     
        cat /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
}   

update_apps()
{                     
	unzip -o -q /sdcard/insanity/insanity-customiser.zip -d /tmp/
	cp -Rf /tmp/updates/* /
	if [ -f /tmp/insanity-script.sh ];  then
		chmod 755 /tmp/insanity-script.sh
		sh /tmp/insanity-script.sh
	fi
} 

update_theme()
{                     
	unzip -o -q /sdcard/insanity/insanity-theme.zip -d /tmp/
	cp -Rf /tmp/updates/* /
	if [ -f /tmp/insanity-script.sh ];  then
		chmod 755 /tmp/insanity-script.sh
		sh /tmp/insanity-script.sh
	fi
}

help_fnc()
{
	echo ""
	echo "Available Commands for `basename $0` are:"
	echo ""
	echo "	Command		Option		Description"
	echo "	-------		------		-----------"
	echo "	remount 	none		Remount /system as Read/Write"
	echo "	ms 			enable/disable	Enable or Disable Media Scanning"
	echo "	efs			backup/restore	Backup or Resotre /efs"
	echo "	zeam		backup/restore	Backup or Resotre insane zeam prefrences"
	echo "	dpi			value		Set the DPI you wish to use, a reboot is required"
	echo "	ctn			none		Clean up Thumbnails"
	echo "	tweaks		enable/disable	Enable or Disable Kernel Tweaks"
	echo "	ect4jnl		enable/disable	Enable or Disable ext4 journal"
	echo "	ramz		enable/disable	Enable or Disable ramzswap"
	echo "	memtime		enable/disable	Enable or Disable Stock Memory Timings"
	echo "	kernel		backup/restore	Backup or Restore Kernel"
	echo "	gps		location	Set the NTP Server - europe.pool.ntp.org or north-america.pool.ntp.org"
	echo "	cpu_stats	none	Show the CPU history"
	echo "	update_apps		Install Applications in /sdcard/insanity/insanity-customiser.zip"
	echo "	update_theme	Install Theme from /sdcard/insanity/insanity-theme.zip"
	echo "	-h 	none		This help screen"
	echo ""
	exit
}


for i
do
  case "$i" in
	remount) remount;;
	ms) meda_scanner $2;;
	efs) efs $2;;
	zeam) zeam $2;;
	dpi) change_dpi $2;;
	ctn) clean_thumbnails;;
	tweaks) kernel_tweaks $2;;
	ect4jnl) ext4_journal $2;;
	ramz) ramzswap $2;;
	memtime) mem_timings $2;;
	kernel) kernel_mgnt $2;;
	gps) gps_fix $2;;
	cpu_stats) cpu_history;;
	update_apps) update_apps;;
	update_theme) update_theme;;
	-h) help_fnc;;
  esac
done
